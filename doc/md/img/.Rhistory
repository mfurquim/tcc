        if (j1[i] > j2[i]) {
            w1 = w1 + 1
        }
        if (j1[i] < j2[i]) {
            w2 = w2 + 1
        }
        if (j1[i] == j2[i]) {
            tie = tie + 1
        }
    }
    w1s[f] <- (100*w1/length(j1))
    w2s[f] <- (100*w2/length(j1))
    ties[f] <- (100*tie/length(j1))
    names[f] <- paste(substr(files[f],3,3), "C:", substr(files[f],5,5), "D")
    num_discs[f] <- as.numeric(as.character(substr(names[f],3,3)))*as.numeric(as.character(substr(names[f],5,5)))
    print(paste(names[f], "->", w1, ":", tie, ":", w2, sep=""))
#   plot(j1,j2, main = "Main title", sub = "sub title" , ylab = "Y axis", xlab = "X axis")
#   print(paste(files[f], " ", w1, ":", tie, ":", w2, sep=""))
}
print(paste(names, "->", w1s, ":", ties, ":", w2s, sep=""))
for (rest in length(files)+1:8) {
    w1s[rest] <- NA
    ties[rest] <- NA
    w2s[rest] <- NA
}
library(plot3D)
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
print(m)
persp3D(x=2:4, y=2:4, z=m, theta=100, phi=145, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=0, phi=145, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=0, phi=100, border="black", bty="b2")
for (i in seq(from=0, to=100, by=10))
for (j in seq(from=0, to=100, by=10))
persp3D(x=2:4, y=2:4, z=m, theta=0, phi=100, border="black", bty="b2")
for (i in seq(from=0, to=100, by=10))
for (i in seq(from=0, to=100, by=10))
for (i in seq(from=0, to=100, by=10))
for (j in seq(from=0, to=100, by=10))
persp3D(x=2:4, y=2:4, z=m, theta=i, phi=j, border="black", bty="b2")
for (i in seq(from=0, to=100, by=10)) {
print(i); for (j in seq(from=0, to=100, by=10)) {
print(j);
persp3D(x=2:4, y=2:4, z=m, theta=i, phi=j, border="black", bty="b2")
}
}
persp3D(x=2:4, y=2:4, z=m, theta=40, phi=60, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=40, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=40, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=240, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=120, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=110, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=130, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=150, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=160, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=180, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=50, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=150, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=100, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=90, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=70, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=60, border="black", bty="b2")
scatter2D(m)
scatter2D(x = 2:4, y = 2:4, z = m)
scatter3D(x = 2:4, y = 2:4, z = m)
args(scatter3D)
args(scatter3D)
scatter3D(x = 2:4, y = 2:4, z = m)
scatter3D(x = 2:4, y = 2:4, z = w1s)
scatter3D(x = 2:4, y = 2:4, z = 2:4)
library(lattice)
wireframe(z~x*y, data=data)
wireframe(m)
args(wireframe)
wireframe(2:4,2:4,m)
wireframe(m)
args(matrix)
args(image3D)
image3D(m)
image3D(x=2:4, y=2:4, z=m)
image3D(x=2, y=4, z=m)
image3D(x=2, y=4, z=1)
image2D(m)
args(image2D)
image2D(m,xlim=c(0,100))
image2D(m,xlim=c(0,1))
image2D(m,xlim=c(0,2))
image2D(m,xlim=c(0,1))
image2D(m,ylim=xlim=c(0,1))
image2D(m,ylim=c(0,1),xlim=c(0,1))
m
image2D(m,ylab="asd"ylim=c(0,1),xlim=c(0,1))
image2D(m,ylab="asd",ylim=c(0,1),xlim=c(0,1))
image2D(m,ylab="asd", ylim=c(2,4),xlim=c(0,1))
image2D(m,ylab="asd",ylim=c(0,1),xlim=c(0,1))
args(segments3D)
segments3D
segments2D(m,ylab="asd",ylim=c(0,1),xlim=c(0,1))
segments2D(m,ylab="asd",y0=0),xlim=c(0,1))
segments2D(m,y0=0,xlim=c(0,1))
segments2D(m,y0=0,x=0)
segments2D(m,y0=0,x0=0)
segments3D(m)
surf3D(m)
surf3D(y=2:4,x=2:4,m)
surf3D(y=2:4,x=2:4,z=m)
surf3D(y=2:4,x=m,z=2:4)
surf3D(y=c(2,3,4),x=m,z=c(2,3,4))
example(hist3d)
example(hist3D)
example(hist3D)
z <- with (mesh(2:4, 2:4), m)
z
persp3D(2:4,2:4,m)
persp3D(2:4,2:4,z)
persp3D(2:4,2:4,m)
persp3D(2:4,2:4,m,bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=60, border="black", bty="b2")
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=60, border="black", bty="b2",inttype=)
persp3D(x=2:4, y=2:4, z=m, theta=200, phi=60, border="black", bty="b2",inttype=2)
image2D(m,ylab="asd",ylim=c(0,1),xlim=c(0,1))
image2D(m,ylab="asd",ylim=c(0,1),xlim=c(0,1), inttype=2)
example(image2D)
example(image2D)
image2D(m,2:4,2:4,ylab="asd",inttype=2)
par(
example(image2D)
image2D(m,2:4,2:4,ylab="asd",inttype=2)
par(mfrow=pm)
image2D(m,2:4,2:4,ylab="asd",inttype=2)
par(mfrow=c(1))
par(mfrow=c(1,1))
image2D(m,2:4,2:4,ylab="asd",inttype=2)
image2D(m,2:4,2:4,ylab="asd",inttype=2)
image2D(m,2:4,2:4,ylab="asd",inttype=2)
image2D(m,2:4,2:4,ylab="asd",inttype=1)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=(0,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=(0,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=(100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(0,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(10,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(20,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(10,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(0,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(20,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(30,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4),zlim=c(21,100))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4))
example(image2D)
image2D(m,2:4,2:4,shade=0.2,ylab="asd",xlim=c(2,4),ylim=c(2,4))
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=0.1)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=0.5)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=0.9)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=1)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=0)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=0.1)
image2D(m,2:4,2:4,ylab="asd",xlim=c(2,4),ylim=c(2,4), shade=0.1, contour=list(col="white", labcex=0.8, lwd=3, alpha=0.5))
points(m)
points(m)
example(hist3d)
example(hist3D)
par(mfrow=c(1,1))
hist3D(m)
hist3D(z=m)
args(hist3D)
hist3D(x=2:4,y=2:4,z=m,)
hist3D(z=m,)
hist3D(x=2:4,y=2:4,z=m, border="black")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.2)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=0)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=20)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-20)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-40)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-50)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-100)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-150)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-140)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-130)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-130, phi=0)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-130, phi=30)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-130, phi=50)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-130, phi=60)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-130, phi=45)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-125, phi=45)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=FALSE,shade=0.1, theta=-125, phi=45)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-125, phi=45)
args(hist3D)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-125, phi=45, bty="b2")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-125, phi=45, bty="b2", space=10)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE,shade=0.1, theta=-125, phi=45, bty="b2", space=0.6)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.6)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.8)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1, opaque.top = TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1, opaque.top = FALSE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE, facets=FALSE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE, lighting=FALSE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.1, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE, lighting=TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0.9, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE, lighting=TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=1, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE, lighting=TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, shade=0, theta=-125, phi=45, bty="b2", space=0.1, image = TRUE, lighting=TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", image = TRUE, lighting=TRUE)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", image = TRUE, lighting=TRUE, space=0.1)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", image = TRUE, lighting=TRUE, space=0.2)
hist3D(x=2:4,y=2:4,z=m, border="black", theta=-125, phi=45, bty="b2", image = TRUE, lighting=TRUE, space=0.2)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", image = TRUE, lighting=TRUE, space=0.2)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2)
hist3D(x=2:4,y=2:4,z=m, contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2)
args(runif)
runif
runif(1,2)
runif(n,1,2)
runif(m,1,2)
runif(m,1,3)
runif(m,1,10000)
runif(m,1,10000)
runif(m,1,10000)
runif(m,1,10000)
runif(m,1,10000)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos de Big Points")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores")
for (f in 1:length(files)) {
for (rest in length(files)+1:8) {
    w1s[rest] <- NA
}
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
for (rest in length(files)+1:8) {
    w1s[rest] <- 0
}
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
m
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores")
for (rest in length(files)+1:8) {
    w1s[rest] <- NA
}
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=c(0,100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=c(1,2,3))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=raibow)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=rainbow)
rainbow
rainbow(1,100)
args(rainbow)
rainbow(w1s,
rainbow(w1s)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=rainbow())
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=rainbow(m))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),col=rainbow(w1s))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias",clim(0,100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias",lim(0,100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
m
m[1]
m[1][1]
m[8
]
m[8]
m[9]
m[10]
m[9] <- 0
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
m[9] <- NA
m[10] <- 0
m
for (rest in length(files)+1:8) {
    w1s[rest] <- NA
}
w1s
num_discs <- c()
w1s <- c()
w2s <- c()
ties <- c()
names <- c()
files <- Sys.glob(file.path(".", "*.csv"))
for (f in 1:length(files)) {
    bigpoints <- read.table(sep=",", files[f])
    board = bigpoints[[1]]
    j1 = bigpoints[[2]]
    j2 = bigpoints[[3]]
    states = bigpoints[[4]]
    tempo = bigpoints[[5]]
    w1 <- 0
    w2 <- 0
    tie <- 0
    for (i in 1:length(j1)) {
        if (j1[i] > j2[i]) {
            w1 = w1 + 1
        }
        if (j1[i] < j2[i]) {
            w2 = w2 + 1
        }
        if (j1[i] == j2[i]) {
            tie = tie + 1
        }
    }
    w1s[f] <- (100*w1/length(j1))
    w2s[f] <- (100*w2/length(j1))
    ties[f] <- (100*tie/length(j1))
    names[f] <- paste(substr(files[f],3,3), "C:", substr(files[f],5,5), "D")
    num_discs[f] <- as.numeric(as.character(substr(names[f],3,3)))*as.numeric(as.character(substr(names[f],5,5)))
}
for (rest in length(files)+1:8) {
    w1s[rest] <- NA
    ties[rest] <- NA
    w2s[rest] <- NA
}
library(plot3D)
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
print(m)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
w1s
w1snum_discs <- c()
w1s <- c()
w2s <- c()
ties <- c()
names <- c()
files <- Sys.glob(file.path(".", "*.csv"))
num_discs <- c()
w1s <- c()
w2s <- c()
ties <- c()
names <- c()
files <- Sys.glob(file.path(".", "*.csv"))
w1s
for (f in 1:length(files)) {
    bigpoints <- read.table(sep=",", files[f])
    board = bigpoints[[1]]
    j1 = bigpoints[[2]]
    j2 = bigpoints[[3]]
    states = bigpoints[[4]]
    tempo = bigpoints[[5]]
    w1 <- 0
    w2 <- 0
    tie <- 0
    for (i in 1:length(j1)) {
        if (j1[i] > j2[i]) {
            w1 = w1 + 1
        }
        if (j1[i] < j2[i]) {
            w2 = w2 + 1
        }
        if (j1[i] == j2[i]) {
            tie = tie + 1
        }
    }
    w1s[f] <- (100*w1/length(j1))
    w2s[f] <- (100*w2/length(j1))
    ties[f] <- (100*tie/length(j1))
    names[f] <- paste(substr(files[f],3,3), "C:", substr(files[f],5,5), "D")
    num_discs[f] <- as.numeric(as.character(substr(names[f],3,3)))*as.numeric(as.character(substr(names[f],5,5)))
}
w1s
for (rest in length(files)+1:8) {
print(rest)
}
for (rest in seq(from=length(files)+1, to=8) {
for (rest in seq(from=length(files)+1, to=8)) {
print(rest)R
}
w1s
for (rest in seq(from=length(files)+1, to=9)) {
print(rest)
}
w1s[8] <- 0
w1s[9] <- NA
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
m
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.1, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.1, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
demo(hist3d)
library(rgl)
demo(hist3d)
hist3d(rnorm(2500),rnorm(2500),alpha=0.4,nclass=7,scale=30)
hist3d(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.1, main="Jogos Reduzidos de Big Points", xlab="Número de Discos", ylab="Número de Cores", zlim=c(0,100),zlab="% de Vitórias")
hist3d(2:4,2:4,m)
warnings()
args(hist3d)
hist3d(m)
hist3d(m,y=2:4)
hist3d(m,scale=1)
hist3d(m,scale=100)
pers3d(2:4,2:4,m)
persp3d(2:4,2:4,m)
persp3d(2:4,2:4,m, inttype=3)
persp3d(2:4,2:4,m, inttype=2)
r3d(m(
r3d(m)
r3dDefaults(m)
rgl.open()
rgl.texts(x,y,z,labels)
x<-c(0,1,0,0)
y<-c(0,0,1,0)
z<-c(0,0,0,1)
labels <-("Origins","x","y","z")
labels <-("Origin","x","y","z")
labels <-c("Origin","x","y","z")
rgl.texts(x,y,z,labels)
i<-c(1,2,1,3,1,4)
rgl.texts(1,1,1,"rgl.* coordinates")
rgl.lines(x[i],y[i],z[i])
open3d()
text3d(x,y,z,labels)
text3d(1,1,1,"rgl.* coordinates")
segments3d(x[i],y[i],z[i])
close()
close3d()
rgl.close()
rgl.dev.list()
demo(hist3d)
open3d()
hist3d(rnorm(2500),rnorm(2500),alpha=0.4,nclass=7,scale=30)
open3d()
hist3d(m)
hist3d(m,nclass=1)
hist3d(m,nclass=100)
hist3d(m,nclass=10)
m
hist3d(m,nclass=10,scale=30)
hist3d(m,nclass=10,scale=100)
hist3d(2:4,2:4,m,nclass=10,scale=100)
hist3d(2:4,2:4,nclass=10,scale=100)
hist3d(2:4,2:4,nclass=10,scale=100)
hist3d(1,2,nclass=10,scale=100)
hist3d(1,2,nclass=9,scale=100)
hist3d(m,nclass=9,scale=30)
close3d(()
close3d()
rgl.close()
hist3d(m,nclass=9,scale=30)
num_discs <- c()
w1s <- c()
w2s <- c()
ties <- c()
names <- c()
files <- Sys.glob(file.path(".", "*.csv"))
for (f in 1:length(files)) {
    bigpoints <- read.table(sep=",", files[f])
    board = bigpoints[[1]]
    j1 = bigpoints[[2]]
    j2 = bigpoints[[3]]
    states = bigpoints[[4]]
    tempo = bigpoints[[5]]
    w1 <- 0
    w2 <- 0
    tie <- 0
    for (i in 1:length(j1)) {
        if (j1[i] > j2[i]) {
            w1 = w1 + 1
        }
        if (j1[i] < j2[i]) {
            w2 = w2 + 1
        }
        if (j1[i] == j2[i]) {
            tie = tie + 1
        }
    }
    w1s[f] <- (100*w1/length(j1))
    w2s[f] <- (100*w2/length(j1))
    ties[f] <- (100*tie/length(j1))
    names[f] <- paste(substr(files[f],3,3), "C:", substr(files[f],5,5), "D")
    num_discs[f] <- as.numeric(as.character(substr(names[f],3,3)))*as.numeric(as.character(substr(names[f],5,5)))
}
for (rest in length(files)+1:9) {
    w1s[rest] <- NA
    ties[rest] <- NA
    w2s[rest] <- NA
}
library(plot3D)
m <- matrix(ties, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
print(m)
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(20))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(start=0, end=100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0, end=100))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0, end=0.9))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0, end=0.5))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0, end=0.8))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0, end=0.85))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0.1, end=1))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0.15, end=1))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0.15, end=1), clab="%")
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Empates", col=rainbow(100, start=0.15, end=1), clab="Porcentagem")
m <- matrix(w1s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
hist3D(x=2:4,y=2:4,z=m, border="black", contour=TRUE, theta=-125, phi=45, bty="b2", lighting=TRUE, space=0.2, main="Jogos Reduzidos de Big Points", ylab="Número de Discos", xlab="Número de Cores",zlim=c(0,100),zlab="% de Vitórias", col=rainbow(100, start=0.15, end=1), clab="Porcentagem")
m <- matrix(w2s, nrow = 3, ncol = 3, byrow = TRUE, dimnames = list(c("C2", "C3", "C4"), c("D2","D3","D4")))
w2s
ties
68*0.85
68*0.85+0.15
0.68*0.85+0.15
0.68*0.85
0.68*0.85+0.15
w2s
0.07*0.85+0.15
